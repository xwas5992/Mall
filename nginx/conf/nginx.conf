user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 工作连接数
events {
    worker_connections 10240;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main;

    # 基础配置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # GZIP压缩
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 缓存配置
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=mall_cache:10m max_size=10g inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    proxy_cache_bypass $http_pragma;
    proxy_cache_revalidate on;

    # 上游服务器配置 - 认证服务
    upstream auth_service {
        server 127.0.0.1:8081 weight=5 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 上游服务器配置 - 商品服务
    upstream product_service {
        server 127.0.0.1:8082 weight=5 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 上游服务器配置 - 用户服务
    upstream user_service {
        server 127.0.0.1:8085 weight=5 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # 商城主站点配置
    server {
        listen 80;
        server_name mall.com www.mall.com localhost;

        # CORS配置 - 全局CORS头
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;

        # 处理OPTIONS预检请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000 always;
            add_header Content-Type "text/plain; charset=utf-8" always;
            add_header Content-Length 0 always;
            return 204;
        }

        # 安全相关头部
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # 访问日志
        access_log /var/log/nginx/mall.access.log main;
        error_log /var/log/nginx/mall.error.log warn;

        # 静态资源缓存
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|eot|svg)$ {
            expires 7d;
            add_header Cache-Control "public, no-transform";
        }

        # 认证服务API
        location /api/auth/ {
            # 反向代理到认证服务
            proxy_pass http://auth_service/api/auth/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 缓存配置
            proxy_cache mall_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;

            # 限流配置
            limit_req zone=auth_limit burst=20 nodelay;
            limit_req_status 429;
        }

        # 商品服务API - 包括首页商品管理
        location /api/products/ {
            # 反向代理到商品服务
            proxy_pass http://product_service/product-service/api/products/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 缓存配置
            proxy_cache mall_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;

            # 限流配置
            limit_req zone=product_limit burst=30 nodelay;
            limit_req_status 429;
        }

        # 首页商品管理API - 新增
        location /api/homepage/ {
            # 反向代理到商品服务的首页商品管理
            proxy_pass http://product_service/product-service/api/homepage/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 首页商品管理不缓存
            proxy_no_cache 1;
            proxy_cache_bypass 1;

            # 限流配置
            limit_req zone=homepage_limit burst=20 nodelay;
            limit_req_status 429;
        }

        # 用户服务API
        location /api/user/ {
            # 反向代理到用户服务
            proxy_pass http://user_service/api/user/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 缓存配置
            proxy_cache mall_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_pragma;
            proxy_cache_revalidate on;

            # 限流配置
            limit_req zone=user_limit burst=20 nodelay;
            limit_req_status 429;
        }

        # 购物车API
        location /api/cart/ {
            # 反向代理到商品服务的购物车功能
            proxy_pass http://product_service/product-service/api/cart/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 购物车不缓存
            proxy_no_cache 1;
            proxy_cache_bypass 1;

            # 限流配置
            limit_req zone=cart_limit burst=10 nodelay;
            limit_req_status 429;
        }

        # 前端静态文件服务
        location / {
            root /var/www/mall/frontend;
            index index.html;
            try_files $uri $uri/ /index.html;

            # 静态文件缓存
            location ~* \.(html)$ {
                expires 1h;
                add_header Cache-Control "public, no-cache";
            }
        }

        # 管理员前端
        location /admin/ {
            alias /var/www/mall/frontend-admin/;
            index index.html;
            try_files $uri $uri/ /admin/index.html;
        }

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # 限流配置
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=product_limit:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=user_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=cart_limit:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=homepage_limit:10m rate=15r/s;
} 